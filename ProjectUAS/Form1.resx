<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>